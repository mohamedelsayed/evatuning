<?php /**
 * @author Author "Elsayed Ellabad"  
 * @author Author Email "ellabafci@yahoo.com"
 * @copyright Copyright (c) 2015 Programming by "http://www.mohamedelsayed.net"
 */
// module_load_include('inc', 'content', 'includes/password');
function ellabad_init(){
	//ellabad_save_order();
	// ellabad_make_cart_ordered(1, 1);
	//ellabad_save_order('eee');
	// ellabad_get_cart_item_quantity(218, 1, 0);
	// ellabad_clear_cookie_items();
	//(pr($_COOKIE));
	//die(pr(json_decode($_COOKIE['cart_products'])));
	//ellabad_get_order_details(37);
	//ellabad_order_total(37);
}
function ellabad_menu() {
	$items['admin/custom/orders'] = array(
		'title' => 'All Orders',
		'page callback' => 'ellabad_list_orders_with_pager_content',
		'page arguments' => array(),
        'type' => MENU_CALLBACK,
		'access arguments' => array('access content'),
		//'weight' => -14,
	);
	$items['admin/custom/order/%'] = array(
		'title' => 'View Order',
		'page callback' => 'ellabad_view_order',
		'page arguments' => array(3),
        'type' => MENU_CALLBACK,
		'access arguments' => array('access content'),
		//'weight' => -14,
	);
	$items['admin/custom/update_order_status/%/%'] = array(
		'title' => 'View Order',
		'page callback' => 'update_order_status',
		'page arguments' => array(3, 4),
        'type' => MENU_CALLBACK,
		'access arguments' => array('access content'),
		//'weight' => -14,
	);
	$items['my_orders'] = array(
		'title' => 'My Orders',
		'page callback' => 'ellabad_list_user_orders',
		'page arguments' => array(),
        'type' => MENU_CALLBACK,
		'access arguments' => array('access content'),
		//'weight' => -14,
	);
	$items['order_item/%'] = array(
		'title' => 'Order Item',
		'page callback' => 'ellabad_view_order_front',
		'page arguments' => array(1),
        'type' => MENU_CALLBACK,
		'access arguments' => array('access content'),
		//'weight' => -14,
	);
    return $items;
}

function ellabad_form_alter(&$form, &$form_state, $form_id){
}
/**
 * @param 
 * @return 
 * This is a test function
 */ 
function ellabad_test() {
}
/*
* function to create orders table
*/
function ellabad_update_7100() {
    $schema = array(
        'fields' => array(
            'id' => array(
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'uid' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'status' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),            
            'phone' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'address1' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'address2' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'country' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'city' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'zip' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'created' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'updated' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'paypal_transaction_id' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
        ),
        'primary key' => array('id'),
    );
    db_create_table('orders', $schema);
}
/**
 * @param 
 * @return 
 * This is a test function
 */ 
function ellabad_save_order($paypal_transaction_id) {
	if(user_is_logged_in()) {
		global $user;
		$uid = $user->uid;
		$status = 0;
		$phone = '';
		$address1 = '';
		$address2 = '';
		$country = '';
		$city =  '';
		$zip = '';
		$created = time();
		$updated = time();
		//$paypal_transaction_id = '';

		if(isset($_COOKIE['cart_phone'])) {
			$phone = $_COOKIE['cart_phone'];
		}
		if(isset($_COOKIE['cart_address1'])) {
			$address1 = $_COOKIE['cart_address1'];
		}
		if(isset($_COOKIE['cart_address2'])) {
			$address2 = $_COOKIE['cart_address2'];
		}
		if(isset($_COOKIE['cart_country'])) {
			$country = $_COOKIE['cart_country'];
		}
		if(isset($_COOKIE['cart_city'])) {
			$city = $_COOKIE['cart_city'];
		}
		if(isset($_COOKIE['cart_zip'])) {
			$zip = $_COOKIE['cart_zip'];
		}
		//function to call when we need
	    $cart_summary = elsayed_get_cart_summary();
	    $cart_price = $cart_summary['price'];
		
		if(isset($_COOKIE['cart_amount'])) {
			$paid_cart_ammount = $_COOKIE['cart_amount'];
		}
		$order_info = array(
			'uid' => $uid,
            'status' => $status,
            'phone' => $phone,
            'address1' => $address1,
            'address2' => $address2,
            'country' => $country,
            'city' => $city,
            'zip' => $zip,
            'created' => $created,
            'updated' => $updated,
            'paypal_transaction_id' => $paypal_transaction_id
	    );
		//if amount not changed
		if($cart_price == $paid_cart_ammount) {
			//Make new order with information received and update cart items
			ellabad_make_order($order_info);
		} else {
			//Get all cart items and compare with ordered items and update quantity if it is changed
			$all_cart_items = array();
	    	$all_cart_items = elsayed_get_cart_query($uid);
	    	//get all cookie items
	    	$ordered_items = json_decode($_COOKIE['cart_products']);
	    	foreach ($all_cart_items as $key => $item) {
	    		$item_quntity = $item->quantity;
	    		$item_nid = $item->nid;
                if(isset($ordered_items->$item_nid)){
		    		$item_quntity_ordered =  $ordered_items->$item_nid;
		    		if($item->quantity != $item_quntity_ordered) {
		    			ellabad_update_cart_changed_item_quantity($item->nid, $item_quntity_ordered, $item->uid );
		    		}
		    	}else{
		    	    $num_deleted = db_delete('orders_products')
                      ->condition('uid', $item->uid)
                      ->condition('order_id', 0)
                      ->condition('nid', $item->nid)
                      ->execute();		    	    
		    	}
	    	}
			//Make new order with information received and update cart items
			ellabad_make_order($order_info);	    	 
		}
	}
}
/*
* Function to update all cart items to be ordered if make order success
*/
function ellabad_make_cart_ordered($uid = 0, $order_id = 0) {
    if($uid == 0){
        global $user;
        $uid = $user->uid;
    }
    if($uid != 0 and $order_id != 0){
       
    	db_update('orders_products')
                ->fields(array(
                    'order_id' => $order_id,
                ))
                ->condition('uid', $uid, '=')
                ->condition('order_id', 0, '=')
                ->execute();
    }
}
/*
* Function to update quantity ofproduct  of cart if it changed during payment cycle
*/
function ellabad_update_cart_changed_item_quantity($nid = 0, $quantity = 0  ,$uid = 0) {
    if($nid != 0 && $uid != 0){       
		db_update('orders_products')
            ->fields(array(
                'quantity' => $quantity,
            ))
            ->condition('nid', $nid, '=')
            ->condition('uid', $uid, '=')            
            ->condition('order_id', 0, '=') 
            ->execute();	
    }
}
/*
* function to update cart item quantity if it is updated during payment
*/
function ellabad_get_cart_item_quantity($item_id, $uid, $order_id = 0) {
	$item_quntity = db_query('SELECT quantity FROM {orders_products} WHERE (nid = :nid) AND (uid = :uid) AND (uid = :uid) AND (order_id = :order_id) ', 
        array(':nid' => $item_id,':uid' => $uid, 'order_id' => $order_id))->fetchField();
	return $item_quntity;
}
/*
* function to clear cookie items
*/
function ellabad_clear_cookie_items() {
	unset($_COOKIE['cart_products']);
	unset($_COOKIE['cart_phone']);
	unset($_COOKIE['cart_address1']);
	unset($_COOKIE['cart_address2']);
	unset($_COOKIE['cart_zip']);
	unset($_COOKIE['cart_city']);
	unset($_COOKIE['cart_amount']);
	unset($_COOKIE['cart_currency_code']);
	unset($_COOKIE['cart_business']);
	
}

/*
* Function to make order
*/
function ellabad_make_order($order_info) {
	$order_id = db_insert('orders')
        ->fields(array(
            'uid' => $order_info['uid'],
            'status' => $order_info['status'],
            'phone' => $order_info['phone'],
            'address1' => $order_info['address1'],
            'address2' => $order_info['address2'],
            'country' => $order_info['country'],
            'city' => $order_info['city'],
            'zip' => $order_info['zip'],
            'created' => $order_info['created'],
            'updated' => $order_info['updated'],
            'paypal_transaction_id' => $order_info['paypal_transaction_id']
        ))->execute();
    
    ellabad_make_cart_ordered($order_info['uid'], $order_id);
	ellabad_clear_cookie_items();
    
}
/*
* Function to list all orders with page content for admin
*/
function ellabad_list_orders_with_pager_content() {
    drupal_add_css('ul.action-links a.active{
        background-color: #0074BD;
        color:#ffffff;       
    }', 'inline');
	if(elsayed_is_user_admin()){
		$header = array(
			//array('data' => t('Weight'), 'field' => 'weight', 'sort' => 'asc'),
			//array('data' => t('id'), 'field' => 'domain_id', 'sort' => 'desc'),
			array('data' => t('Order ID')),
			array('data' => t('User Name')),		
			array('data' => t('Status')),
			array('data' => t('Created')),
			array('data' => t('Total Amount')),
			array('data' => t('Operations')),
		);
		global $base_url;
		$status = arg(3);
		$status_val = '';
        $class_all = '';
        $class_active = '';
        $class_pending = '';
        if($status == 'all'){
            $class_all = 'active';
        }elseif($status == 'active'){
			$status_val = 1;
            $class_active = 'active';
		} else if($status == 'pending') {
		    $class_pending = 'active';
			$status_val = 0;
		}
		$uid = arg(4);
		$query = db_select('orders', 'o');
		$query->condition('o.uid', 0, '!=');

		//$query->join('users', 'u', 'o.uid= u.uid');
		$query->fields('o', array('id', 'uid', 'status', 'created'));
		if($status == 'active' || $status == 'pending' ){
			$query->condition('o.status', $status_val, '=');
		}
		if($uid != ''){
			$query->condition('o.uid', $uid, '=');
		}
		$table_sort = $query->extend('TableSort') // Add table sort extender.
			->orderByHeader($header); // Add order by headers.
			$pager = $table_sort->extend('PagerDefault')
			->limit(20);
		$result = $pager->execute();
		$rows = array();
		$output = '<ul class="action-links">
			<li><a class="'.$class_all.'" href="'.$base_url.'/admin/custom/orders/all">All</a></li>
			<li><a class="'.$class_active.'" href="'.$base_url.'/admin/custom/orders/active">Active</a></li>
			<li><a class="'.$class_pending.'" href="'.$base_url.'/admin/custom/orders/pending">Pending</a></li>
			</ul>';
		foreach($result as $res){
			$rows[] = array($res->id, ellabad_get_user_realname($res->uid) ,ellabad_get_order_status($res->status), date('Y-m-d H:i:s', $res->created), ellabad_order_total($res->id) , "<a href='$base_url/admin/custom/order/$res->id'>View</a>");		
		}
		// If rows are not empty theme and display the rows.
		if (!empty($rows)){
			$output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));
			$output .= theme('pager');
		}else{
			$output .= t("No results found.");
		}

		return $output;
	} else {
		return "You are not authorized to access this page";
	}
}
/*
* Function to return order status text
*/
function ellabad_get_order_status($order_status) {
	$status = '';
	if($order_status != ''){
		if($order_status == 0){
			$status = 'Pending';
		} elseif($order_status == 1){
			$status = 'Active';
		} else {
			$status = 'Cancelled';
		}
	}
	return $status;
}

/*
* Function to return user realname
*/
function ellabad_get_user_realname($uid) {
	$realname = '';
	if($uid != 0){
		$user_data = user_load($uid);
		$realname = $user_data->name;
		if(isset($user_data->realname)) {
			$realname = $user_data->realname;
		}
	}
	return $realname;
}

/*
* Function to view admin order page informtion
*/
function ellabad_view_order() {
	if(elsayed_is_user_admin()){
		$order_id = arg(3);
		global $base_url;
		//get order iformation
		$order = ellabad_get_order_details($order_id);

		$order_id =  $order['info']->id;
		$order_status = $order['info']->status;
		$status_button ='Make active';
		$status_val = 1;
		if($order_status == 1){
			$status_button ='Make Pending';
			$status_val = 0;
		}

		$output = '<ul class="action-links">
			<li><a href="'.$base_url.'/admin/custom/orders">List all orders</a></li>
			<li><a href="'.$base_url.'/admin/custom/update_order_status/'.$order_id.'/'.$status_val.'">'.$status_button.'</a></li>
			</ul>';
		$output .='<br><b> Order basic info</b>';
        require_once DRUPAL_ROOT . '/includes/locale.inc';
        $options = country_get_list();
        $country_name = '';
        if(isset($options[$order['info']->country])) {
        	$country_name =$options[$order['info']->country];
        }
		$output .='<table id="table">
			    <thead>			    
			    <tr>
			        <th data-field="key" >ID</th>
			        <th data-field="value">'. $order['info']->id  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >Status</th>
			        <th data-field="value">'. ellabad_get_order_status($order['info']->status) .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >Phone</th>
			        <th data-field="value">'. $order['info']->phone  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >Address</th>
			        <th data-field="value">'. $order['info']->address1  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >Address2</th>
			        <th data-field="value">'. $order['info']->address2  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >Country</th>
			        <th data-field="value">'. $country_name  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >City</th>
			        <th data-field="value">'. $order['info']->city  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >ZIP</th>
			        <th data-field="value">'. $order['info']->zip  .'</th>
			    <tr>
			    <tr>
			        <th data-field="key" >Created</th>
			        <th data-field="value">'. date('Y-m-d H:i:s', $order['info']->created)  .'</th>
			    <tr>
			    <tr>
			        <th data-field="key" >Paypal Transaction ID</th>
			        <th data-field="value">'. $order['info']->paypal_transaction_id  .'</th>
			    <tr>
			    <tr>
			        <th data-field="key" >Total Amount</th>
			        <th data-field="value">'. ellabad_order_total($order['info']->id)  .'</th>
			    <tr>
			    </thead>
			</table>';
		

        $output .= "<br><b><b> Order owner info</b></b>";
   		$output .='<table id="table">
		    <thead>
			    <tr>
			        <th data-field="key" >ID</th>
			        <th data-field="value">'. $order['info']->id  .'</th>
			    </tr>

			    <tr>
			        <th data-field="key" >Full name</th>
			        <th data-field="value">'. ellabad_get_user_realname($order['info']->uid)  .'</th>
			    </tr>
			    <tr>
			        <th data-field="key" >Username</th>
			        <th data-field="value">'. $order['user']->name  .'</th>
			    </tr>
			      <tr>
			        <th data-field="key" >Mail</th>
			        <th data-field="value">'. $order['user']->mail  .'</th>
			    </tr>		   
		    </thead>
		</table>';

        $output .='<br><b> Order items</b>
        <div class="container">
			<div class="row">
			<div class="table-responsive">
		      <table class="table table-bordered">
		        <thead>
		          <tr>
		            <th>ID</th>
		            <th>Product Name</th>
		            <th>Quantity</th>
		            <th>Price</th>
		          </tr>
		        </thead>
		        <tbody>';		        
		        if(!empty($order['items'])){
		        	foreach ($order['items'] as $key => $item) {
		        	$product_url = elsayed_get_node_url_by_id($item->nid);
		        	$product_link= '<a href="'.$product_url.'">'.$item->title.'</a>';
		       $output .= ' <tr>
			            <td>'. $item->nid .'</td>
			            <td>'. $product_link .'</td>
			            <td>'. $item->quantity .'</td>
			            <td>'. $item->price .'</td>
			          </tr>
			        ';
			    	} 
				}
			$output .=
				       ' <tr>
		            		<td colspan="3">Total Amount</td>
		            		<td>'. ellabad_order_total($order['info']->id) .'</td>
			          		</tr>  
				        </tbody>
				      </table>
				    </div>
					</div>
				</div>';
		return $output;
	}
}
/**
* function to get product details
* @param $order_id
* @return array containg course basic info and owner as object and order items as array
*/
function ellabad_get_order_details($order_id) {
	$order = array();
	if($order_id != 0) {
		//get order basic information
		$order_info = db_query('SELECT * FROM {orders} WHERE (id = :id)', 
        array(':id' => $order_id))->fetchObject();
        $order['info'] = $order_info;
        //get owner of the order
        $order['user'] = user_load($order_info->uid);
        //get order items
        $order['items'] = ellabad_get_order_items_details($order_id);
	}
	return $order;
	
}
/*
* Function to get order items details
*/
function ellabad_get_order_items_details($order_id) {
	$ordered_items_data = array();
	$ordered_items_data =  db_query('SELECT n.nid, n.title, op.quantity, op.price  FROM {node} n, {orders_products} op WHERE (n.nid = op.nid) AND (op.order_id = :order_id)', 
        array(':order_id' => $order_id))->fetchALL();	
	
	return $ordered_items_data;
}

/*
* Function to list all orders of logged-in user
*/
function ellabad_list_user_orders() {
	global $user;
	if(user_is_logged_in() && $user->uid != 0){
		
		$uid = $user->uid;
		$header = array(
			//array('data' => t('Weight'), 'field' => 'weight', 'sort' => 'asc'),
			//array('data' => t('id'), 'field' => 'domain_id', 'sort' => 'desc'),
			array('data' => t('Order ID')),
			array('data' => t('User Name')),		
			array('data' => t('Status')),
			array('data' => t('Created')),
			array('data' => t('Total Amount')),
			array('data' => t('Operations')),
		);
		global $base_url;
		$status = arg(1);
		$status_val = '';
		if($status == 'active'){
			$status_val = 1;
		} else if($status == 'pending') {
			$status_val = 0;
		}
		//$uid = arg(4);
		$query = db_select('orders', 'o');
		$query->condition('o.uid', $uid, '=');

		//$query->join('users', 'u', 'o.uid= u.uid');
		$query->fields('o', array('id', 'uid', 'status', 'created' ));
		if($status == 'active' || $status =='pending' ){
			$query->condition('o.status', $status_val, '=');
		}
		$table_sort = $query->extend('TableSort') // Add table sort extender.
			->orderByHeader($header); // Add order by headers.
			$pager = $table_sort->extend('PagerDefault')
			->limit(20);
		$result = $pager->execute();
		$rows = array();
		$output = '<ul class="action-links">
			<li><a href="'.$base_url.'/my_orders/all">All</a></li>
			<li><a href="'.$base_url.'/my_orders/active">Active</a></li>
			<li><a href="'.$base_url.'/my_orders/pending">Pending</a></li>
			</ul>';
		foreach($result as $res){
			$rows[] = array($res->id, ellabad_get_user_realname($res->uid) ,ellabad_get_order_status($res->status), date('Y-m-d H:i:s', $res->created), ellabad_order_total($res->id) ,"<a href='$base_url/order_item/$res->id'>View</a>");		
		}
		// If rows are not empty theme and display the rows.
		if (!empty($rows)){
			$output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));
			$output .= theme('pager');
		}else{
			$output .= t("No results found.");
		}

		return $output;
	} else {
		return "You are not authorized to access this page";
	}
}

/*
* Function to update order status
*/
function update_order_status() {
	if(elsayed_is_user_admin()){
		$order_id = arg(3);
		$order_status = arg(4);
		if($order_id != 0 && ($order_status == 0 || $order_status == 1 )) {
			db_update('orders')
                ->fields(array(
                    'status' => $order_status,
                ))
                ->condition('id', $order_id, '=')
                ->execute();
		}
		global $base_url;
		drupal_goto("$base_url/admin/custom/order/$order_id");
	}	
}
/*
* Function to get order totals
*/
function ellabad_order_total($order_id) {
	$total = 0;
	$order_symbol = '';
	$order_total = '';

	if($order_id != 0) {
		$ordered_items_data =  db_query('SELECT op.quantity, op.price  FROM {orders_products} op WHERE (op.order_id = :order_id)', 
        array(':order_id' => $order_id))->fetchALL();
        if(!empty($ordered_items_data)) {
        	foreach ($ordered_items_data as $key => $item) {
        		$total += $item->quantity * $item->price;
        	}
        }
        $default_currency = elsayed_get_default_currency();
		if(isset($default_currency->field_symbol[LANGUAGE_NONE][0]['value'])){
        	$order_symbol = $default_currency->field_symbol[LANGUAGE_NONE][0]['value'];
        }
        $order_total = $total.' '.$order_symbol;
    }
    return $order_total;
}

/*
* Function to view order on front
*/
function ellabad_view_order_front() {
	if(user_is_logged_in()){
		$order_id = arg(1);
		global $base_url;
		global $user;
		//get order iformation
		$order = ellabad_get_order_details($order_id);

		if($order['info']->uid == $user->uid) {
			require_once DRUPAL_ROOT . '/includes/locale.inc';
	        $options = country_get_list();
	        $country_name = '';
	        if(isset($options[$order['info']->country])) {
	        	$country_name =$options[$order['info']->country];
	        }
			$output ='<br><b> Order basic info</b>';
			
			$output .='<table id="table">
				    <thead>			    
				    <tr>
				        <th data-field="key" >ID</th>
				        <th data-field="value">'. $order['info']->id  .'</th>
				    </tr>				    
				    <tr>
				        <th data-field="key" >Status</th>
				        <th data-field="value">'. ellabad_get_order_status($order['info']->status) .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >Phone</th>
				        <th data-field="value">'. $order['info']->phone  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >Address</th>
				        <th data-field="value">'. $order['info']->address1  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >Address2</th>
				        <th data-field="value">'. $order['info']->address2  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >Country</th>
				        <th data-field="value">'. $country_name  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >City</th>
				        <th data-field="value">'. $order['info']->city  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >ZIP</th>
				        <th data-field="value">'. $order['info']->zip  .'</th>
				    <tr>
				    <tr>
				        <th data-field="key" >Created</th>
				        <th data-field="value">'. date('Y-m-d H:i:s', $order['info']->created)  .'</th>
				    <tr>
				    <tr>
				        <th data-field="key" >Paypal Transaction ID</th>
				        <th data-field="value">'. $order['info']->paypal_transaction_id  .'</th>
				    <tr>
				    <tr>
				        <th data-field="key" >Total Amount</th>
				        <th data-field="value">'. ellabad_order_total($order['info']->id)  .'</th>
				    <tr>
				    </thead>
				</table>';
			

	        $output .= "<br><b><b> Order owner info</b></b>";
	   		$output .='<table id="table">
			    <thead>
				    <tr>
				        <th data-field="key" >ID</th>
				        <th data-field="value">'. $order['info']->id  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >Full name</th>
				        <th data-field="value">'. ellabad_get_user_realname($order['info']->uid)  .'</th>
				    </tr>
				    <tr>
				        <th data-field="key" >Username</th>
				        <th data-field="value">'. $order['user']->name  .'</th>
				    </tr>
				      <tr>
				        <th data-field="key" >Mail</th>
				        <th data-field="value">'. $order['user']->mail  .'</th>
				    </tr>		   
			    </thead>
			</table>';

	        $output .='<br><b> Order items</b>
	        <div class="container">
				<div class="row">
				<div class="table-responsive">
			      <table class="table table-bordered">
			        <thead>
			          <tr>
			            <th>ID</th>
			            <th>Product Name</th>
			            <th>Quantity</th>
			            <th>Price</th>
			          </tr>
			        </thead>
			        <tbody>';		        
			        if(!empty($order['items'])){
			        	foreach ($order['items'] as $key => $item) {
			        	$product_url = elsayed_get_node_url_by_id($item->nid);
		        		$product_link= '<a href="'.$product_url.'">'.$item->title.'</a>';
			       	$output .= ' <tr>
				            <td>'. $item->nid .'</td>
				            <td>'. $product_link .'</td>
				            <td>'. $item->quantity .'</td>
				            <td>'. $item->price .'</td>
				          </tr>
				        ';
				    	} 
					}
				$output .=
					       ' <tr>
			            		<td colspan="3">Total Amount</td>
			            		<td>'. ellabad_order_total($order['info']->id) .'</td>
			          		</tr>  
					        </tbody>
					      </table>
					    </div>
						</div>
					</div>';
			
		return $output;
		} else {
			return "You are not authorized to view this page";
		}
		
	}
}