<?php /**
 * @author Author "Elsayed Ellabad"  
 * @author Author Email "ellabafci@yahoo.com"
 * @copyright Copyright (c) 2015 Programming by "http://www.mohamedelsayed.net"
 */
// module_load_include('inc', 'content', 'includes/password');
function ellabad_init(){
	// ellabad_test();
	//ellabad_save_order();
	//ellabad_check_order_item_valid(219, 3, 1);
	// ellabad_make_cart_ordered(1, 1);
	//ellabad_save_order();
}
function elabad_menu() {

    return $items;
}

function ellabad_form_alter(&$form, &$form_state, $form_id){
}
/**
 * @param 
 * @return 
 * This is a test function
 */ 
function ellabad_test() {

	// $_SESSION['id'] = 'my-id';
	// // die(pr($_SESSION));
	// global $user;
	// // die(pr($user));
	// if(user_is_logged_in()) {
	// 	die(pr($user));
	// } else {
	// 	// die('You are not logged in');
	// 	die(pr($user));
	// }
}
/*
* function to create orders table
*/
function ellabad_update_7100() {
    $schema = array(
        'fields' => array(
            'id' => array(
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'uid' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'status' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),            
            'phone' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'address1' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'address2' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'country' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'city' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'zip' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'created' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'updated' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'paypal_transaction_id' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
        ),
        'primary key' => array('id'),
    );
    db_create_table('orders', $schema);
}

/**
 * @param 
 * @return 
 * This is a test function
 */ 
function ellabad_save_order($item_transaction) {

	if(user_is_logged_in()) {
		global $user;
		$uid = $user->uid;

		$status = 0;
		$phone = '';
		$address1 = '';
		$address2 = '';
		$country = '';
		$city =  '';
		$zip = '';
		$created = time();
		$updated = 0;
		$paypal_transaction_id = '';

		if(isset($_COOKIE['phone'])) {
			$phone = $_COOKIE['phone'];
		}
		if(isset($_COOKIE['address1'])) {
			$address1 = $_COOKIE['address1'];
		}
		if(isset($_COOKIE['address2'])) {
			$address2 = $_COOKIE['address2'];
		}
		if(isset($_COOKIE['country'])) {
			$country = $_COOKIE['country'];
		}
		if(isset($_COOKIE['city'])) {
			$city = $_COOKIE['city'];
		}
		if(isset($_COOKIE['zip'])) {
			$city = $_COOKIE['zip'];
		}
		if(isset($_COOKIE['country'])) {
			$city = $_COOKIE['country'];
		}

		//function to call when we need
	    $cart_summary = elsayed_get_cart_summary();
	    $cart_price = $cart_summary['price'];
		
		if(isset($_COOKIE['cart_amount'])) {
			$paid_cart_ammount = $_COOKIE['cart_amount'];
		}
		//die(pr($_COOKIE));
		//if amount not changed
		if($cart_price == $paid_cart_ammount) {
			$order_id = db_insert('orders')
	        ->fields(array(
	            'uid' => $uid,
	            'status' => $status,
	            'phone' => $phone,
	            'address1' => $address1,
	            'address2' => $address2,
	            'country' => $country,
	            'city' => $city,
	            'zip' => $zip,
	            'created' => $created,
	            'updated' => $updated,
	            'paypal_transaction_id' => $paypal_transaction_id
	        ))->execute();

	        ellabad_make_cart_ordered($uid, $order_id);

		}

		

	    //Get all cart items
	    //Loop through all of [json_decode($_COOKIE['cart_products'])]
	    $all_cart_items = array();
	    $all_cart_items = elsayed_get_cart_query($uid);
	}
	    

}

function ellabad_check_order_item_valid($product_id, $quantity, $uid) {
	$order_item = db_query('SELECT * FROM {orders_products} WHERE (nid = :nid) AND (quantity = :quantity) AND (uid = :uid) AND (order_id = 0) ', 
        array(':nid' => $product_id,':quantity' => $quantity, ':uid' => $uid))->fetchObject();
	
}

/*
* Function to update all cart items to be ordered if make order success
*/
function ellabad_make_cart_ordered($uid = 0, $order_id = 0) {
    if($uid == 0){
        global $user;
        $uid = $user->uid;
    }
    if($uid != 0 and $order_id != 0){
    	//get all items in the cart
        $cart_items = elsayed_get_cart_query(1);
        if(!empty($cart_items)) {
        	foreach ($cart_items as $key => $cart_item) {
        		db_update('orders_products')
                    ->fields(array(
                        'order_id' => $order_id,
                    ))
                    ->condition('uid', $cart_item->uid, '=')
                    ->execute();
        	}
        }
    }
}

/*
* Function to update quantity ofproduct  of cart if it changed during payment cycle
*/
function ellabad_update_cart_changed_item_quantity($nid = 0, $quantity = 0, $uid = 0) {
    // if($uid == 0){
    //     global $user;
    //     $uid = $user->uid;
    // }
    if($nid != 0 && $uid != 0){       
		db_update('orders_products')
            ->fields(array(
                'quantity' => $quantity,
            ))
            ->condition('nid', $nid, '=')
            ->condition('uid', $uid, '=')            
            ->condition('order_id', 0, '=') 
            ->execute();
	
    }
}
