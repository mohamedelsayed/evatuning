<?php /**
 * @author Author "Elsayed Ellabad"  
 * @author Author Email "ellabafci@yahoo.com"
 * @copyright Copyright (c) 2015 Programming by "http://www.mohamedelsayed.net"
 */
// module_load_include('inc', 'content', 'includes/password');
function ellabad_init(){
	// ellabad_test();
	//ellabad_save_order();
	//ellabad_check_order_item_valid(219, 3, 1);
	// ellabad_make_cart_ordered(1, 1);
	//ellabad_save_order('eee');
	// ellabad_test();
	// ellabad_get_cart_item_quantity(218, 1, 0);
	// ellabad_clear_cookie_items();
	//die(pr($_COOKIE));
	//die(pr(json_decode($_COOKIE['cart_products'])));
}
function elabad_menu() {

    return $items;
}

function ellabad_form_alter(&$form, &$form_state, $form_id){
}
/**
 * @param 
 * @return 
 * This is a test function
 */ 
function ellabad_test() {
}
/*
* function to create orders table
*/
function ellabad_update_7100() {
    $schema = array(
        'fields' => array(
            'id' => array(
                'type' => 'serial',
                'unsigned' => TRUE,
                'not null' => TRUE,
            ),
            'uid' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'status' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),            
            'phone' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'address1' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'address2' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'country' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'city' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'zip' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
            'created' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'updated' => array(
                'type' => 'int',
                'unsigned' => TRUE,
                'not null' => TRUE,
                'default' => '0',
            ),
            'paypal_transaction_id' => array(
        		'type' => 'varchar',
		        'length' => 255,
		        'not null' => FALSE,
		        'default' => ''
            ),
        ),
        'primary key' => array('id'),
    );
    db_create_table('orders', $schema);
}

/**
 * @param 
 * @return 
 * This is a test function
 */ 
function ellabad_save_order($item_transaction) {

	if(user_is_logged_in()) {
		global $user;
		$uid = $user->uid;

		$status = 0;
		$phone = '';
		$address1 = '';
		$address2 = '';
		$country = '';
		$city =  '';
		$zip = '';
		$created = time();
		$updated = time();
		$paypal_transaction_id = '';

		if(isset($_COOKIE['cart_phone'])) {
			$phone = $_COOKIE['cart_phone'];
		}
		if(isset($_COOKIE['cart_address1'])) {
			$address1 = $_COOKIE['cart_address1'];
		}
		if(isset($_COOKIE['cart_address2'])) {
			$address2 = $_COOKIE['cart_address2'];
		}
		if(isset($_COOKIE['cart_country'])) {
			$country = $_COOKIE['cart_country'];
		}
		if(isset($_COOKIE['cart_city'])) {
			$city = $_COOKIE['cart_city'];
		}
		if(isset($_COOKIE['cart_zip'])) {
			$zip = $_COOKIE['cart_zip'];
		}

		//function to call when we need
	    $cart_summary = elsayed_get_cart_summary();
	    $cart_price = $cart_summary['price'];
		
		if(isset($_COOKIE['cart_amount'])) {
			$paid_cart_ammount = $_COOKIE['cart_amount'];
		}

		$order_info = array(
			'uid' => $uid,
            'status' => $status,
            'phone' => $phone,
            'address1' => $address1,
            'address2' => $address2,
            'country' => $country,
            'city' => $city,
            'zip' => $zip,
            'created' => $created,
            'updated' => $updated,
            'paypal_transaction_id' => $paypal_transaction_id
	    );
		//if amount not changed
		if($cart_price == $paid_cart_ammount) {
			//Make new order with information received and update cart items
			ellabad_make_order($order_info);
		} else {
			//Get all cart items and compare with ordered items and update quantity if it is changed
			$all_cart_items = array();
	    	$all_cart_items = elsayed_get_cart_query($uid);
	    	//get all cookie items
	    	$ordered_items = json_decode($_COOKIE['cart_products']);
	    	foreach ($all_cart_items as $key => $item) {
	    		$item_quntity = $item->quantity;
	    		$item_nid = $item->nid;
	    		if($ordered_items->$item_nid != '') {
		    		$item_quntity_ordered =  $ordered_items->$item_nid;

		    		if($item->quantity != $item_quntity_ordered) {
		    			ellabad_update_cart_changed_item_quantity($item->nid, $item_quntity_ordered, $item->uid );
		    		}
		    	}
	    	}
			//Make new order with information received and update cart items
			ellabad_make_order($order_info);
	    	 
		}

		

	    //Get all cart items
	    //Loop through all of [json_decode($_COOKIE['cart_products'])]
	    // $all_cart_items = array();
	    // $all_cart_items = elsayed_get_cart_query($uid);
	}
	    

}
/*
* Function to update all cart items to be ordered if make order success
*/
function ellabad_make_cart_ordered($uid = 0, $order_id = 0) {
    if($uid == 0){
        global $user;
        $uid = $user->uid;
    }
    if($uid != 0 and $order_id != 0){   	
       
    	db_update('orders_products')
                ->fields(array(
                    'order_id' => $order_id,
                ))
                ->condition('uid', $uid, '=')
                ->condition('order_id', 0, '=')
                ->execute();
    	}
    }
}

/*
* Function to update quantity ofproduct  of cart if it changed during payment cycle
*/
function ellabad_update_cart_changed_item_quantity($nid = 0, $quantity = 0  ,$uid = 0) {
    if($nid != 0 && $uid != 0){       
		db_update('orders_products')
            ->fields(array(
                'quantity' => $quantity,
            ))
            ->condition('nid', $nid, '=')
            ->condition('uid', $uid, '=')            
            ->condition('order_id', 0, '=') 
            ->execute();
	
    }
}
/*
* function to update cart item quantity if it is updated during payment
*/
function ellabad_get_cart_item_quantity($item_id, $uid, $order_id = 0) {
	$item_quntity = db_query('SELECT quantity FROM {orders_products} WHERE (nid = :nid) AND (uid = :uid) AND (uid = :uid) AND (order_id = :order_id) ', 
        array(':nid' => $item_id,':uid' => $uid, 'order_id' => $order_id))->fetchField();
	return $item_quntity;
}
/*
* function to clear cookie items
*/
function ellabad_clear_cookie_items() {
	unset($_COOKIE['cart_products']);
	unset($_COOKIE['cart_phone']);
	unset($_COOKIE['cart_address1']);
	unset($_COOKIE['cart_address2']);
	unset($_COOKIE['cart_zip']);
	unset($_COOKIE['cart_city']);
	unset($_COOKIE['cart_amount']);
	unset($_COOKIE['cart_currency_code']);
	unset($_COOKIE['cart_business']);
	
}

/*
* Function to make order
*/
function ellabad_make_order($order_info) {
	$order_id = db_insert('orders')
        ->fields(array(
            'uid' => $order_info['uid'],
            'status' => $order_info['status'],
            'phone' => $order_info['phone'],
            'address1' => $order_info['address1'],
            'address2' => $order_info['address2'],
            'country' => $order_info['country'],
            'city' => $order_info['city'],
            'zip' => $order_info['zip'],
            'created' => $order_info['created'],
            'updated' => $order_info['updated'],
            'paypal_transaction_id' => $order_info['paypal_transaction_id']
        ))->execute();
    
    ellabad_make_cart_ordered($order_info['uid'], $order_id);
	ellabad_clear_cookie_items();
    
}
